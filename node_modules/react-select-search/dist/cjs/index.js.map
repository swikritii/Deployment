{"mappings":"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","sources":["src/index.js","src/SelectSearch.jsx","src/useSelect.js","src/lib/getOption.js","src/lib/isSame.js","src/lib/updateOption.js","src/lib/toArray.js","src/lib/getDisplayValue.js","src/lib/getValue.js","src/lib/groupOptions.js","src/lib/fuzzySearch.js","src/lib/reduce.js","src/useOptions.js","src/lib/flattenOptions.js","src/useHighlight.js","src/lib/highlight.js","src/lib/classes.js","src/components/Options.jsx","src/components/Option.jsx","src/lib/isSelected.js"],"sourcesContent":["import SelectSearch from './SelectSearch';\nexport { default as useSelect } from './useSelect';\n\nexport default SelectSearch;\n","import React, { forwardRef, useEffect, useRef, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport useSelect from './useSelect';\nimport classes from './lib/classes';\nimport Options from './components/Options';\n\nconst SelectSearch = forwardRef(\n    (\n        {\n            disabled,\n            placeholder,\n            multiple,\n            search,\n            autoFocus,\n            autoComplete = 'on',\n            id,\n            closeOnSelect = true,\n            className = 'select-search',\n            renderValue,\n            renderOption,\n            renderGroupHeader,\n            fuzzySearch = true,\n            emptyMessage,\n            value,\n            debounce = 250,\n            printOptions = 'auto',\n            options = [],\n            ...hookProps\n        },\n        ref,\n    ) => {\n        const selectRef = useRef(null);\n        const cls = (classNames) => classes(classNames, className);\n        const [controlledValue, setControlledValue] = useState(value);\n        const [snapshot, valueProps, optionProps] = useSelect({\n            value: controlledValue,\n            placeholder,\n            multiple,\n            search,\n            closeOnSelect: closeOnSelect && !multiple,\n            useFuzzySearch: fuzzySearch,\n            options,\n            printOptions,\n            debounce,\n            ...hookProps,\n        });\n        const { highlighted, value: snapValue, fetching, focus } = snapshot;\n\n        const props = {\n            ...valueProps,\n            autoFocus,\n            autoComplete,\n            disabled,\n        };\n\n        useEffect(() => {\n            const { current } = selectRef;\n\n            if (current) {\n                const val = Array.isArray(snapValue) ? snapValue[0] : snapValue;\n                const selected = current.querySelector(\n                    highlighted > -1\n                        ? `[data-index=\"${highlighted}\"]`\n                        : `[value=\"${encodeURIComponent(val)}\"]`,\n                );\n\n                if (selected) {\n                    const rect = current.getBoundingClientRect();\n                    const selectedRect = selected.getBoundingClientRect();\n\n                    current.scrollTop =\n                        selected.offsetTop -\n                        rect.height / 2 +\n                        selectedRect.height / 2;\n                }\n            }\n        }, [snapValue, highlighted, selectRef.current]);\n\n        useEffect(() => setControlledValue(value), [value]);\n\n        return (\n            <div\n                ref={ref}\n                id={id}\n                className={cls({\n                    container: true,\n                    'is-multiple': multiple,\n                    'is-disabled': disabled,\n                    'is-loading': fetching,\n                    'has-focus': focus,\n                })}\n            >\n                {(!multiple || placeholder || search) && (\n                    <div className={cls('value')}>\n                        {renderValue &&\n                            renderValue(props, snapshot, cls('input'))}\n                        {!renderValue && (\n                            <input {...props} className={cls('input')} />\n                        )}\n                    </div>\n                )}\n                <div\n                    className={cls('select')}\n                    ref={selectRef}\n                    onMouseDown={(e) => e.preventDefault()}\n                >\n                    {snapshot.options.length > 0 && (\n                        <Options\n                            options={snapshot.options}\n                            optionProps={optionProps}\n                            renderOption={renderOption}\n                            renderGroupHeader={renderGroupHeader}\n                            disabled={disabled}\n                            snapshot={snapshot}\n                            cls={cls}\n                        />\n                    )}\n                    {!snapshot.options.length && (\n                        <ul className={cls('options')}>\n                            {!snapshot.options.length && emptyMessage && (\n                                <li className={cls('not-found')}>\n                                    {emptyMessage}\n                                </li>\n                            )}\n                        </ul>\n                    )}\n                </div>\n            </div>\n        );\n    },\n);\n\nSelectSearch.propTypes = {\n    // Data\n    options: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n                .isRequired,\n        }),\n    ),\n    getOptions: PropTypes.func,\n    filterOptions: PropTypes.arrayOf(PropTypes.func),\n    fuzzySearch: PropTypes.bool,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n    // Interaction\n    multiple: PropTypes.bool,\n    search: PropTypes.bool,\n    disabled: PropTypes.bool,\n    closeOnSelect: PropTypes.bool,\n    debounce: PropTypes.number,\n\n    // Attributes\n    placeholder: PropTypes.string,\n    id: PropTypes.string,\n    autoComplete: PropTypes.string,\n    autoFocus: PropTypes.bool,\n\n    // Design\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n    // Renderers\n    renderOption: PropTypes.func,\n    renderGroupHeader: PropTypes.func,\n    renderValue: PropTypes.func,\n    emptyMessage: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n    // Events\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n};\n\nSelectSearch.displayName = 'SelectSearch';\n\nexport default SelectSearch;\n","import { useEffect, useRef, useState } from 'react';\nimport getOption from './lib/getOption';\nimport updateOption from './lib/updateOption';\nimport getDisplayValue from './lib/getDisplayValue';\nimport getValue from './lib/getValue';\nimport groupOptions from './lib/groupOptions';\nimport fuzzySearch from './lib/fuzzySearch';\nimport reduce from './lib/reduce';\nimport useOptions from './useOptions';\nimport useHighlight from './useHighlight';\n\nconst nullCb = () => {};\n\nexport default function useSelect({\n    options: defaultOptions,\n    defaultValue,\n    value,\n    multiple,\n    search,\n    onChange = nullCb,\n    onFocus = nullCb,\n    onBlur = nullCb,\n    closeOnSelect = true,\n    placeholder,\n    getOptions,\n    filterOptions,\n    useFuzzySearch = true,\n    debounce,\n}) {\n    const ref = useRef();\n    const [option, setOption] = useState(null);\n    const [q, setSearch] = useState('');\n    const [focus, setFocus] = useState(false);\n    const [options, fetching] = useOptions(\n        defaultOptions,\n        getOptions,\n        debounce,\n        q,\n    );\n\n    const onSelect = (v) => {\n        const newOption = updateOption(\n            getOption(decodeURIComponent(v), options),\n            option,\n            multiple,\n        );\n\n        if (value === undefined) {\n            setOption(newOption);\n        }\n\n        onChange(getValue(newOption), newOption);\n\n        setTimeout(() => {\n            if (ref.current && closeOnSelect) {\n                ref.current.blur();\n            }\n        }, 0);\n    };\n\n    const middleware = [\n        useFuzzySearch ? fuzzySearch : null,\n        ...(filterOptions ? filterOptions : []),\n    ];\n    const filteredOptions = groupOptions(reduce(middleware, options, q));\n    const [keyHandlers, highlighted, setHighlighted] = useHighlight(\n        filteredOptions,\n        onSelect,\n        ref,\n    );\n\n    const snapshot = {\n        search: q,\n        focus,\n        option,\n        value: getValue(option),\n        fetching,\n        highlighted,\n        options: filteredOptions,\n        displayValue: getDisplayValue(option, options, placeholder),\n    };\n\n    const valueProps = {\n        tabIndex: '0',\n        readOnly: !search,\n        placeholder,\n        value: focus && search ? q : snapshot.displayValue,\n        ref,\n        ...keyHandlers,\n        onFocus: (e) => {\n            setFocus(true);\n            onFocus(e);\n        },\n        onBlur: (e) => {\n            setFocus(false);\n            !option && setSearch('');\n            setHighlighted(-1);\n            onBlur(e);\n        },\n        onMouseDown: (e) => {\n            if (focus) {\n                e.preventDefault();\n                ref.current.blur();\n            }\n        },\n        onChange: search\n            ? ({ target }) => setSearch(target.value)\n            : null,\n    };\n\n    const optionProps = {\n        tabIndex: '-1',\n        onMouseDown(e) {\n            e.preventDefault();\n            onSelect(e.currentTarget.value);\n        },\n    };\n\n    useEffect(() => {\n        setOption(getOption(\n            value === undefined ? defaultValue : value,\n            options,\n        ));\n    }, [value, options]);\n\n    return [snapshot, valueProps, optionProps];\n}\n","import isSame from './isSame';\n\nexport default function getOption(value, options) {\n    if (Array.isArray(value)) {\n        return value\n            .map((v) => options.find((o) => isSame(o.value, v)))\n            .filter((o) => o);\n    }\n\n    return options.find((o) => isSame(o.value, value)) || null;\n}\n","export default function isSame(v1, v2) {\n    return String(v1) === String(v2);\n}\n","import isSame from './isSame';\nimport toArray from './toArray';\n\nexport default function updateOption(newOption, oldOption, multiple) {\n    if (!newOption) {\n        return oldOption;\n    }\n\n    if (!multiple) {\n        return newOption;\n    }\n\n    if (!oldOption) {\n        return toArray(newOption);\n    }\n\n    const nextOption = [...toArray(oldOption)];\n    const newOptionIndex = nextOption.findIndex((o) =>\n        isSame(o.value, newOption.value),\n    );\n\n    if (newOptionIndex >= 0) {\n        nextOption.splice(newOptionIndex, 1);\n    } else {\n        nextOption.push(newOption);\n    }\n\n    return nextOption;\n}\n","export default function toArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n","export default function getDisplayValue(option, options, placeholder) {\n    if (!option && !placeholder) {\n        return options && options.length ? options[0].name || '' : '';\n    }\n\n    const isMultiple = Array.isArray(option);\n\n    if (!option && !isMultiple) {\n        return '';\n    }\n\n    return isMultiple\n        ? option\n              .map((o) => o.name)\n              .filter(Boolean)\n              .join(', ')\n        : option.name || '';\n}\n","export default function getValue(option) {\n    if (!option) return null;\n\n    if (Array.isArray(option)) {\n        return option.filter(Boolean).map((o) => o.value);\n    }\n\n    return option.value || null;\n}\n","export default function groupOptions(options) {\n    const nextOptions = [];\n\n    options.forEach((option) => {\n        if (option.group) {\n            const group = nextOptions.findIndex((o) => o.type === 'group' && o.name === option.group);\n\n            if (group >= 0) {\n                nextOptions[group].items.push(option);\n            } else {\n                nextOptions.push({\n                    items: [option],\n                    type: 'group',\n                    name: option.group,\n                });\n            }\n        } else {\n            nextOptions.push(option);\n        }\n    });\n\n    return nextOptions;\n}\n","function search(q, text) {\n    const searchLength = q.length;\n    const textLength = text.length;\n\n    if (searchLength > textLength) {\n        return false;\n    }\n\n    if (text.indexOf(q) >= 0) {\n        return true;\n    }\n\n    mainLoop: for (let i = 0, j = 0; i < searchLength; i += 1) {\n        const ch = q.charCodeAt(i);\n\n        while (j < textLength) {\n            if (text.charCodeAt(j++) === ch) {\n                continue mainLoop;\n            }\n        }\n\n        return false;\n    }\n\n    return true;\n}\n\nexport default function fuzzySearch(options, query) {\n    return !query.length\n        ? options\n        : options.filter((o) =>\n              search(\n                  query.toLowerCase(),\n                  `${o.name} ${o.group || ''}`.trim().toLowerCase(),\n              ),\n          );\n}\n","export default function reduce(middleware, items, query) {\n    return middleware.filter(Boolean)\n        .reduce((data, cb) => cb(data, query), items)\n        .map((item, i) => ({ ...item, index: i }));\n}\n","import { useEffect, useState } from 'react';\nimport flattenOptions from './lib/flattenOptions';\n\nexport default function useOptions(\n    defaultOptions,\n    getOptions,\n    debounceTime,\n    search,\n) {\n    const [options, setOptions] = useState(() => flattenOptions(defaultOptions));\n    const [fetching, setFetching] = useState(false);\n\n    useEffect(() => {\n        let timeout;\n\n        if (!getOptions) {\n            return;\n        }\n\n        timeout = setTimeout(() => {\n            const optionsReq = getOptions(search, options);\n\n            setFetching(true);\n\n            Promise.resolve(optionsReq)\n                .then((newOptions) => setOptions(flattenOptions(newOptions)))\n                .finally(() => setFetching(false));\n        }, debounceTime);\n\n        return () => {\n            clearTimeout(timeout);\n        };\n    }, [search]);\n\n    useEffect(() => {\n        setOptions(flattenOptions(defaultOptions));\n    }, [defaultOptions]);\n\n    return [options, fetching];\n}\n","export default function flattenOptions(options) {\n    let index = 0;\n\n    return options.map((option) => {\n        if (option.type === 'group') {\n            return option.items.map((o) => ({\n                ...o,\n                group: option.name,\n                index: index++,\n            }));\n        }\n\n        return { ...option, index: index++ };\n    }).flat();\n}\n","import { useState } from 'react';\nimport highlight from './lib/highlight';\n\nexport default function useHighlight(options, onSelect, ref) {\n    const [highlighted, setHighlighted] = useState(-1);\n\n    return [\n        {\n            onKeyDown: (e) => {\n                const key = e.key.replace('Arrow', '').toLowerCase();\n\n                if (key === 'down' || key === 'up') {\n                    e.preventDefault();\n                    setHighlighted(highlight(highlighted, key, options));\n                }\n            },\n            onKeyUp: (e) => {\n                if (e.key === 'Escape') {\n                    e.preventDefault();\n                    ref.current.blur();\n                } else if (e.key === 'Enter') {\n                    e.preventDefault();\n\n                    if (options[highlighted]) {\n                        onSelect(options[highlighted].value);\n                    }\n                }\n            },\n        },\n        highlighted,\n        setHighlighted,\n    ];\n}\n","export default function highlight(current, dir, options) {\n    const max = options.length - 1;\n    let option = null;\n    let i = -1;\n    let newHighlighted = current;\n\n    while (i++ <= max && (!option || option.disabled)) {\n        newHighlighted =\n            dir === 'down' ? newHighlighted + 1 : newHighlighted - 1;\n\n        if (newHighlighted < 0) {\n            newHighlighted = max;\n        } else if (newHighlighted > max) {\n            newHighlighted = 0;\n        }\n\n        option = options[newHighlighted];\n    }\n\n    return newHighlighted;\n}\n","const isString = (str) => typeof str === 'string';\nconst getClassName = (str, className) =>\n    isString(className) ? `${className}-${str}` : className[str];\n\nexport default function classes(classNames, className) {\n    if (isString(classNames)) return getClassName(classNames, className);\n\n    return Object.entries(classNames)\n        .filter(([cls, display]) => cls && display)\n        .map(([cls]) => getClassName(cls, className))\n        .join(' ');\n}\n","import React from 'react';\nimport Option from './Option';\nimport isSelected from '../lib/isSelected';\n\nfunction Options(props) {\n    const {\n        options,\n        cls,\n        renderOption,\n        renderGroupHeader,\n        optionProps,\n        snapshot,\n        disabled,\n    } = props;\n\n    return (\n        <ul className={cls('options')}>\n            {options.map((o) => {\n                if (o.type === 'group') {\n                    return (\n                        <li role=\"none\" className={cls('row')} key={o.name}>\n                            <div className={cls('group')}>\n                                <div className={cls('group-header')}>\n                                    {renderGroupHeader\n                                        ? renderGroupHeader(o.name)\n                                        : o.name}\n                                </div>\n                                <Options {...props} options={o.items} />\n                            </div>\n                        </li>\n                    );\n                }\n\n                return (\n                    <Option\n                        key={o.value}\n                        option={o}\n                        optionProps={optionProps}\n                        cls={cls}\n                        renderOption={renderOption}\n                        selected={isSelected(o, snapshot.option)}\n                        highlighted={snapshot.highlighted === o.index}\n                        disabled={o.disabled || disabled}\n                    />\n                );\n            })}\n        </ul>\n    );\n}\n\nexport default Options;\n","import React from 'react';\n\nfunction Option({\n    optionProps,\n    highlighted,\n    selected,\n    option,\n    cls,\n    renderOption,\n    disabled,\n}) {\n    const props = {\n        ...optionProps,\n        value: encodeURIComponent(option.value),\n        disabled,\n    };\n    const className = cls({\n        option: true,\n        'is-selected': selected,\n        'is-highlighted': highlighted,\n    });\n\n    return (\n        <li className={cls('row')} role=\"menuitem\" data-index={option.index}>\n            {renderOption &&\n                renderOption(\n                    props,\n                    option,\n                    { selected, highlighted },\n                    className,\n                )}\n            {!renderOption && (\n                <button type=\"button\" className={className} {...props}>\n                    {option.name}\n                </button>\n            )}\n        </li>\n    );\n}\n\nexport default Option;\n","export default function isSelected(option, selectedOption) {\n    if (!selectedOption) return false;\n\n    return Array.isArray(selectedOption)\n        ? selectedOption.findIndex((o) => o.value === option.value) >= 0\n        : selectedOption.value === option.value;\n}\n"],"names":["SelectSearch","default","useSelect","React","forwardRef","useEffect","useRef","useState","PropTypes","classes","Options","disabled","placeholder","multiple","search","autoFocus","autoComplete","id","closeOnSelect","className","renderValue","renderOption","renderGroupHeader","fuzzySearch","emptyMessage","value","debounce","printOptions","options","hookProps","ref","selectRef","cls","classNames","controlledValue","setControlledValue","snapshot","valueProps","optionProps","useFuzzySearch","highlighted","snapValue","fetching","focus","props","current","val","Array","isArray","selected","querySelector","encodeURIComponent","rect","getBoundingClientRect","selectedRect","scrollTop","offsetTop","height","container","e","preventDefault","length","displayName","getOption","updateOption","getDisplayValue","getValue","groupOptions","reduce","useOptions","useHighlight","nullCb","defaultOptions","defaultValue","onChange","onFocus","onBlur","getOptions","filterOptions","option","setOption","q","setSearch","setFocus","onSelect","v","newOption","decodeURIComponent","undefined","setTimeout","blur","middleware","filteredOptions","keyHandlers","setHighlighted","displayValue","tabIndex","readOnly","onMouseDown","target","currentTarget","isSame","map","find","o","filter","v1","v2","String","toArray","oldOption","nextOption","newOptionIndex","findIndex","splice","push","name","isMultiple","Boolean","join","nextOptions","forEach","group","type","items","text","searchLength","textLength","indexOf","mainLoop","i","j","ch","charCodeAt","query","toLowerCase","trim","data","cb","item","index","flattenOptions","debounceTime","setOptions","setFetching","timeout","optionsReq","Promise","resolve","then","newOptions","finally","clearTimeout","flat","highlight","onKeyDown","key","replace","onKeyUp","dir","max","newHighlighted","isString","str","getClassName","Object","entries","display","Option","isSelected","selectedOption"],"version":3,"file":"index.js.map"}